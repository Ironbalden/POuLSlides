#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass beamer
\begin_preamble
\usetheme{Madrid}
% or ...
% set fonts for nicer pdf view
\IfFileExists{lmodern.sty}{\usepackage{lmodern}}{}

\setbeamercovered{transparent}
% or whatever (possibly just delete it)



\titlegraphic{\includegraphics[height=2cm]{poul-logo.pdf}}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman times
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 2
\use_esint 0
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
This file is a solution template for:
\end_layout

\begin_layout Itemize
Talk at a conference/colloquium.
 
\end_layout

\begin_layout Itemize
Talk length is about 20min.
 
\end_layout

\begin_layout Itemize
Style is ornate.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Copyright 2004 by Till Tantau <tantau@users.sourceforge.net>.
 
\end_layout

\begin_layout Plain Layout
In principle, this file can be redistributed and/or modified under the terms
 of the GNU Public License, version 2.
 However, this file is supposed to be a template to be modified for your
 own needs.
 For this reason, if you use this file as a template and not specifically
 distribute it as part of a another package/program, the author grants the
 extra permission to freely copy and modify this file as you see fit and
 even to delete this copyright notice.
 
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Title screen
\end_layout

\begin_layout Title
Command line kung fu
\begin_inset Argument
status open

\begin_layout Plain Layout
Bash e filtri
\begin_inset Note Note
status open

\begin_layout Plain Layout
optional, use only with long paper titles
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subtitle
Bash, filtri & co.
\end_layout

\begin_layout Author
Riccardo Binetti
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
href{mailto:punkerbino@gmail.com}{
\backslash
nolinkurl{punkerbino@gmail.com}}
\end_layout

\end_inset


\begin_inset Argument
status open

\begin_layout Plain Layout
Riccardo Binetti
\end_layout

\end_inset


\end_layout

\begin_layout Date
Corsi GNU/Linux Avanzati 2014
\begin_inset Note Note
status collapsed

\begin_layout Itemize
Either use conference name or its abbreviation.
 
\end_layout

\begin_layout Itemize
Not really informative to the audience, more for people (including yourself)
 who are reading the slides online
\end_layout

\end_inset


\begin_inset Argument
status open

\begin_layout Plain Layout
Corsi Linux Avanzati 2014
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
optional, should be abbreviation of conference name
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
If you wish to uncover everything in a step-wise fashion, uncomment the
 following command:
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
beamerdefaultoverlayspecification{<+->}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Structuring a talk is a difficult task and the following structure may not
 be suitable.
 Here are some rules that apply for this solution: 
\end_layout

\begin_layout Itemize
Exactly two or three sections (other than the summary).
 
\end_layout

\begin_layout Itemize
At *most* three subsections per section.
 
\end_layout

\begin_layout Itemize
Talk about 30s to 2min per frame.
 So there should be between about 15 and 30 frames, all told.
\end_layout

\begin_layout Itemize
A conference audience is likely to know very little of what you are going
 to talk about.
 So *simplify*! 
\end_layout

\begin_layout Itemize
In a 20min talk, getting the main ideas across is hard enough.
 Leave out details, even if it means being less precise than you think necessary.
 
\end_layout

\begin_layout Itemize
If you omit details that are vital to the proof/implementation, just say
 so once.
 Everybody will be happy with that.
 
\end_layout

\end_inset


\end_layout

\begin_layout Section
Bash 101
\end_layout

\begin_layout Subsection
I vantaggi del terminale
\end_layout

\begin_layout BeginFrame
“Il terminale? Nel 2014?”
\end_layout

\begin_layout FrameSubtitle
\begin_inset Note Note
status open

\begin_layout Plain Layout
A title should summarize the slide in an understandable fashion for anyone
 how does not follow everything on the slide itself.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Sì, il terminale viene usato anche nell'era delle GUI stilose
\end_layout

\begin_layout Pause

\end_layout

\begin_layout Itemize
È agnostico rispetto a distribuzione, ambiente grafico e OS
\begin_inset Foot
status open

\begin_layout Plain Layout
Finché rimaniamo nei sistemi unix-like
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize
Si può usare da remoto e/o su una macchina senza schermo
\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize
Automatizzazione molto facilitata
\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize
Se nulla altro sembra andare, un terminale non si nega a nessuno
\end_layout

\begin_layout Subsection
Man
\end_layout

\begin_layout BeginFrame
Un comando per domarli tutti
\end_layout

\begin_layout Standard
\align center

\family typewriter
\size larger
man
\end_layout

\begin_layout Itemize
Se siete in dubbio su cosa faccia un comando, digitate 
\family typewriter
man comando
\family default
.
 Vi risolverà buona parte dei dubbi e vi risparmierà un po' di "RTFM"
\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize
La sintassi del comando sarà del tipo 
\family typewriter
comando [opzioni] [argomenti] argomento
\family default
.
 Tutto ciò che è tra parentesi quadre è opzionale, le opzioni si passano
 con uno o due trattini (- o 
\begin_inset ERT
status open

\begin_layout Plain Layout

-
\backslash
/-
\end_layout

\end_inset

)
\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize
Per cercare all'interno della man page basta scrivere 
\family typewriter
/terminecercato
\family default
 e premere 
\family typewriter
Enter
\family default
.
 Premendo n si passa al prossimo match.
\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\begin_layout Itemize
La ricerca non fa il wrap-around, arrivati alla fine della manpage premete
 
\family typewriter
p
\family default
 per tornare in cima
\end_layout

\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize
Premendo 
\family typewriter
q
\family default
 si esce dalla manpage
\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
man man
\end_layout

\begin_layout Subsection
Comandi bash di base
\end_layout

\begin_layout BeginFrame
Muovere i primi passi
\end_layout

\begin_layout Itemize

\family typewriter
ls
\family default
 -- elenca i file nella cartella corrente
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
ls nomecartella --
\family default
 elenca i file della cartella con quel nome
\end_layout

\begin_layout Itemize

\family typewriter
-lah
\family default
 -- mostra i file incolonnati con maggiori informazioni (-l) includendo
 anche i file nascosti (-a) con le dimensioni in formato human-readable
 (-h)
\end_layout

\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
cd nomecartella
\family default
 -- ci sposta nella directory
\end_layout

\begin_deeper
\begin_layout Itemize
.
 è la directory corrente, ..
 è la directory un livello più in su
\end_layout

\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
pwd
\family default
 -- stampa la directory in cui ci si trova
\end_layout

\begin_layout BeginFrame
Creiamo qualcosa
\end_layout

\begin_layout Itemize

\family typewriter
touch nomefile
\family default
 -- crea un file vuoto se non esiste
\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
mkdir nomecartella
\family default
 -- crea una directory vuota
\end_layout

\begin_deeper
\begin_layout Itemize
-p -- crea tutte le directory necessarie (e.g.
 
\family typewriter
mkdir a/b/c/
\family default
 crea anche a e b se non esistono)
\end_layout

\begin_layout Pause

\end_layout

\end_deeper
\begin_layout AlertBlock
\begin_inset ERT
status open

\begin_layout Plain Layout

{Nota importante}
\end_layout

\end_inset

Il filesystem Linux, a differenza di quello Windows, è case sensitive.
\begin_inset Newline newline
\end_inset

Se create (o modificate) i file ricordate che 
\family typewriter
foo 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
neq$
\end_layout

\end_inset

 Foo 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
neq$
\end_layout

\end_inset

 FOO
\end_layout

\begin_layout BeginFrame
Io ti ho creato, io ti distruggo
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Da qui rm e varie (shred).
 Alert sul fatto che è tutto sempre definitivo.
 Mini-demo sui comandi visti finora.
 
\end_layout

\begin_layout Plain Layout
Poi Editor di testo.
 nano (-w), vim e emacs.
 Mini demo di nano e vim.
\end_layout

\begin_layout Plain Layout
Filtri, pipe e cazzi.
 Demo su filtri pipe e cazzi.
\end_layout

\begin_layout Plain Layout
[Se ci sta: script bash]
\end_layout

\begin_layout Plain Layout
[optional: pre-intro sul POuL.]
\end_layout

\begin_layout Plain Layout
[optional: pre-intro sull'amministrazione di sistema.]
\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\family typewriter
rm nomefile
\family default
 -- cancella un file
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
-r
\family default
 -- se il file è una cartella, cancella ricorsivamente il suo contenuto
\end_layout

\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
rmdir nomecartella
\family default
 -- cancella una cartella solo se vuota
\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize
Se siete paranoici: 
\family typewriter
shred nomefile
\family default
 -- sovrascrive un file con bit random 3 volte
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
-u
\family default
 -- dopo averlo sovrascritto, lo cancella
\end_layout

\begin_layout Pause

\end_layout

\end_deeper
\begin_layout AlertBlock
\begin_inset ERT
status open

\begin_layout Plain Layout

{Attenzione}
\end_layout

\end_inset

 Nel terminale, non esiste un “cestino”.
 Una volta che avete rimosso un file, è perso per sempre.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
footnotemark
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
footnotetext{A meno di strani magheggi con software forense}
\end_layout

\end_inset


\end_layout

\begin_layout BeginFrame
Modifiche di base ai file
\end_layout

\begin_layout Itemize

\family typewriter
cp sorgente destinazione
\family default
 -- Copia il file 
\family typewriter
sorgente
\family default
 nel file 
\family typewriter
destinazione
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
-r
\family default
 -- Da usare per copiare una directory
\end_layout

\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
mv sorgente destinazione
\family default
 -- Sposta il file sorgente in destinazione
\end_layout

\begin_deeper
\begin_layout Itemize
Si può usare per rinominare i file se 
\family typewriter
destinazione
\family default
 è nella stessa cartella di 
\family typewriter
sorgente
\end_layout

\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
ln -s sorgente /path/al/collegamento
\family default
 -- Crea un collegamento simbolico al file 
\family typewriter
sorgente
\family default
 in 
\family typewriter
/path/al/collegamento
\end_layout

\begin_layout BeginFrame
Historia magistra vitae
\end_layout

\begin_layout Itemize

\family typewriter
Ctrl+p
\family default
 o 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
uparrow$
\end_layout

\end_inset

 per andare indietro (comandi più vecchi) nella history dei comandi
\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
Ctrl+n
\family default
 o 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
downarrow$
\end_layout

\end_inset

 per avanti (comandi più recenti) nella history dei comandi
\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
Ctrl+r
\family default
 per effetturare la ricerca di una stringa nei comandi della history
\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize
La history è salvata nel file 
\family typewriter
.bash_history
\family default
 nella home dell'utente
\end_layout

\begin_layout BeginFrame
Domande?
\end_layout

\begin_layout Pause

\end_layout

\begin_layout Standard
\align center

\size huge
Demo!
\end_layout

\begin_layout Section
Editor di testo
\end_layout

\begin_layout Subsection
Introduzione
\end_layout

\begin_layout BeginFrame
Scriviamo qualcosa
\end_layout

\begin_layout Standard
Dobbiamo poter modificare in qualche modo i nostri file.
\begin_inset Newline newline
\end_inset

Text editors to the rescue!
\end_layout

\begin_layout Standard
Ne vediamo 3 in particolare:
\end_layout

\begin_layout Itemize

\family typewriter
nano
\end_layout

\begin_layout Itemize

\family typewriter
vim
\end_layout

\begin_layout Itemize

\family typewriter
emacs
\end_layout

\begin_layout Subsection
nano
\end_layout

\begin_layout BeginFrame

\family typewriter
nano
\end_layout

\begin_layout Quotation
“nano è il miglior text editor del mondo” cit.
 Nessuno
\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize
Presente di default in tutte le maggiori distribuzioni
\end_layout

\begin_layout Itemize
Semplice da usare
\end_layout

\begin_layout Itemize
Piuttosto basilare
\end_layout

\begin_layout Itemize
Avviatelo sempre con l'opzione 
\family typewriter
-w 
\family default
(altrimenti spezza le righe troppo lunghe)
\end_layout

\begin_layout Itemize
I comandi sono segnati in basso
\end_layout

\begin_deeper
\begin_layout Itemize
^X va interpretato come Ctrl+X 
\end_layout

\end_deeper
\begin_layout Subsection
vim
\end_layout

\begin_layout BeginFrame

\family typewriter
vim
\end_layout

\begin_layout Quotation

\size small
“I've been using Vim for about 2 years now, mostly because I can't figure
 out how to exit it.”
\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize
Editor modale
\end_layout

\begin_layout Itemize
I modi di utilizzo base sono: Normal, Insert e Command mode
\end_layout

\begin_deeper
\begin_layout Itemize
Nella modalità Normal (a cui si accede premendo 
\family typewriter
Esc
\family default
) si può navigare all'interno del file di testo
\end_layout

\begin_layout Itemize
Nella modalità Insert (a cui si accede premendo 
\family typewriter
i
\family default
 in modalità Normal) si può modificare il file
\end_layout

\begin_layout Itemize
Nella modalità Command (a cui si accede premendo : in modalità Normal) si
 possono inserire comandi o impostazioni per l'editor
\end_layout

\end_deeper
\begin_layout Itemize
“Aiuto, ho aperto vim per sbaglio, come esco?”
\end_layout

\begin_deeper
\begin_layout Itemize
:wq per uscire salvando il file, :q! per uscire senza salvare
\end_layout

\end_deeper
\begin_layout Itemize
Questo è l'utilizzo base, si può usare in modo più avanzato
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.viemu.com/vi-vim-cheat-sheet.gif
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Emacs
\end_layout

\begin_layout BeginFrame

\family typewriter
emacs
\end_layout

\begin_layout Quotation

\size small
“emacs is a great operating system, lacking only a decent editor”
\end_layout

\begin_layout Pause

\end_layout

\begin_layout Itemize
GNU Emacs è un ambiente operativo che ha all'interno un interprete Lisp
\end_layout

\begin_layout Itemize
C'è una modalità per qualsiasi cosa (dal lettore mp3 allo psicologo)
\end_layout

\begin_layout Itemize
Il suo utilizzo si basa prevalentemente su combinazioni di tasti
\end_layout

\begin_layout Itemize
È estremamente personalizzabile e scriptabile
\end_layout

\begin_layout Itemize
Questa flessibilità si paga con un utilizzo di risorse maggiore
\end_layout

\begin_layout Subsection
Quale scegliere
\end_layout

\begin_layout BeginFrame
Ma quindi, qual è l'editor migliore?
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename real_programmers.png
	width 70page%

\end_inset


\end_layout

\begin_layout BeginFrame
Ma quindi, qual è l'editor migliore?
\end_layout

\begin_layout Standard

\size large
Se volete scatenare un flame tra utenti Linux, questa è un'ottima domanda
 da fare.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard

\size large
Non vi costa niente provarli tutti e scegliere qual è il migliore 
\shape slanted
per voi.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Pause

\end_layout

\begin_layout Standard
\align center

\size larger
Demo!
\end_layout

\begin_layout Section
Altri comandi bash e filtri
\end_layout

\begin_layout Subsection
Bash++
\end_layout

\begin_layout BeginFrame
Bash++
\end_layout

\begin_layout Itemize

\family typewriter
cat
\family default
 -- concatena e stampa file su schermo
\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
less
\family default
 -- stampa file su schermo con una finestra scorrevole, come la manpage
\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
echo
\family default
 -- stampa il valore di un'espressione
\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
locate
\family default
 -- cerca file in un database
\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\begin_layout Itemize
Il database va aggiornato periodicamente con il comando 
\family typewriter
updatedb
\end_layout

\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
find
\family default
 -- cerca dei file all'interno di una gerarchia di cartelle
\end_layout

\begin_layout Subsection
Redirezione e pipe
\end_layout

\begin_layout BeginFrame
Standard streams
\end_layout

\begin_layout Standard
Ogni processo ha almeno 3 canali di comunicazione di default:
\end_layout

\begin_layout Pause

\end_layout

\begin_layout Itemize
stdin (0) -- il canale che di default riceve l'input che l'utente scrive
 sul terminale
\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize
stdout (1) -- il canale che stampa l'output vero e proprio del programma,
 di default stampa su terminale
\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize
stderr (2) -- il canale che stampa gli errori del programma, anche questo
 di default stampa su terminale
\end_layout

\begin_layout Pause

\end_layout

\begin_layout Standard
Con pipe e redirezioni si possono connettere in vari modi questi canali,
 creando delle vere e proprie “catene di montaggio” di comandi bash che
 permettono di risolvere molti problemi unendo tanti blocchi semplici.
\end_layout

\begin_layout BeginFrame
Redirezione
\end_layout

\begin_layout Itemize

\family typewriter
comando < file
\family default
 -- connette stdin di un processo ad un file
\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
comando > file
\family default
 -- connette stdout di un processo ad un file.
 Se il file esiste viene cancellato e sovrascritto
\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
comando 2> file
\family default
 -- connette stderr di un processo ad un file.
 Se il file esiste viene cancellato e sovrascritto
\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize
comando 
\family typewriter
&> file 
\family default
-- connette stdout e stderr di un processo ad un file.
 Se il file esiste viene cancellato e sovrascritto
\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize
Utilizzando >> al posto di > in uno degli ultimi 3 comandi si ottiene lo
 stesso risultato ma il risultato viene aggiunto al file se esistente
\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
comando1 | comando2
\family default
 -- connette stdout di 
\family typewriter
comando1
\family default
 a stdin di 
\family typewriter
comando2 
\end_layout

\begin_layout BeginFrame
Esecuzione condizionale
\end_layout

\begin_layout Itemize

\family typewriter
comando1 && comando2
\family default
 -- esegue 
\family typewriter
comando2
\family default
 se e solo se 
\family typewriter
comando1
\family default
 ha successo (codice di ritorno = 0)
\end_layout

\begin_deeper
\begin_layout Pause

\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
comando1 || comando2 
\family default
-- esegue 
\family typewriter
comando2
\family default
 se e solo se 
\family typewriter
comando1
\family default
 fallisce (codice di ritorno 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
neq$
\end_layout

\end_inset

 0)
\end_layout

\begin_layout Subsection
Filtri
\end_layout

\begin_layout BeginFrame
Alcuni filtri
\end_layout

\begin_layout Itemize

\family typewriter
cut
\end_layout

\begin_layout Itemize

\family typewriter
sort
\end_layout

\begin_layout Itemize

\family typewriter
uniq
\end_layout

\begin_layout Itemize

\family typewriter
wc
\end_layout

\begin_layout Itemize

\family typewriter
tee
\end_layout

\begin_layout Itemize

\family typewriter
head e tail
\end_layout

\begin_layout Itemize

\family typewriter
grep
\end_layout

\begin_layout BeginFrame

\family typewriter
cut
\end_layout

\begin_layout Itemize
Estrae colonne delimitate da un carattere speciale da ogni riga di un file
 
\end_layout

\begin_layout Itemize

\family typewriter
-d
\family default
 -- specifica il delimitatore (default Tab)
\end_layout

\begin_layout Itemize

\family typewriter
-f
\family default
 -- specifica quale colonna estrarre (one-based)
\end_layout

\begin_layout BeginFrame

\family typewriter
sort
\end_layout

\begin_layout Itemize
Ordina le righe di un file
\end_layout

\begin_layout Itemize

\family typewriter
-k
\family default
 -- specifica quali colonne del file usare come chiave per l'ordinamento
\end_layout

\begin_layout Itemize

\family typewriter
-t
\family default
 -- specifica il delimitatore tra le colonne (default whitespace)
\end_layout

\begin_layout BeginFrame

\family typewriter
uniq
\end_layout

\begin_layout Itemize
Stampa le righe uniche di un file 
\bar under
già ordinato
\end_layout

\begin_layout Itemize

\family typewriter
-c
\family default
 -- conta le occorrenze
\end_layout

\begin_layout Itemize

\family typewriter
-d
\family default
 -- mostra solo i duplicati
\end_layout

\begin_layout Itemize

\family typewriter
-u
\family default
 -- mostra solo i non duplicati
\end_layout

\begin_layout BeginFrame

\family typewriter
wc
\end_layout

\begin_layout Itemize
Conta righe, parole e caratteri
\end_layout

\begin_layout Itemize

\family typewriter
-l
\family default
 -- mostra solo il numero di righe
\end_layout

\begin_layout Itemize

\family typewriter
-w
\family default
 -- mostra solo il numero di parole
\end_layout

\begin_layout Itemize

\family typewriter
-c
\family default
 -- mostra solo il numero di caratteri
\end_layout

\begin_layout BeginFrame

\family typewriter
tee
\end_layout

\begin_layout Itemize
Connette il suo stdin allo stdin di due o più file
\end_layout

\begin_layout Itemize
Utile per mostrare l’output di un comando a schermo e darlo come input ad
 un altro comando
\end_layout

\begin_layout BeginFrame

\family typewriter
head 
\family default
e
\family typewriter
 tail
\end_layout

\begin_layout Itemize

\family typewriter
head
\family default
 mostra le prime 10 righe di un file, 
\family typewriter
tail
\family default
 le ultime 10
\end_layout

\begin_layout Itemize

\family typewriter
-nX
\family default
 -- mostra le prime/ultime X righe
\end_layout

\begin_layout Itemize

\family typewriter
tail -f
\family default
 -- permette di 
\begin_inset Quotes eld
\end_inset

tenere d'occhio” un file a cui vengono continuamente aggiunte righe in coda
 (ad esempio un log)
\end_layout

\begin_layout BeginFrame

\family typewriter
grep
\end_layout

\begin_layout Itemize
Mostra le righe di un file che corrispondono ad un pattern (regular expression
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://xkcd.com/208/
\end_layout

\end_inset


\end_layout

\end_inset

)
\end_layout

\begin_layout Itemize

\family typewriter
-v
\family default
 -- attiva il match invertito (mostra le righe che non corrispondono)
\end_layout

\begin_layout Itemize

\family typewriter
-i
\family default
 -- ricerca case insensitive
\end_layout

\begin_layout Itemize

\family typewriter
-c
\family default
 -- conta i match
\end_layout

\begin_layout Itemize

\family typewriter
-l
\family default
 -- mostra solo i nomi dei file con match
\end_layout

\begin_layout Itemize

\family typewriter
-r
\family default
 -- ricerca ricorsivamente all'interno dei file a partire da una cartella
\end_layout

\begin_layout Itemize

\family typewriter
-E
\family default
 -- usa le extended regular expression
\end_layout

\begin_layout BeginFrame
Domande?
\end_layout

\begin_layout Pause

\end_layout

\begin_layout Standard
\align center

\size huge
Demo!
\end_layout

\begin_layout Section*
Appendice
\end_layout

\begin_layout Subsection*
Fonti
\end_layout

\begin_layout BeginFrame
Per approfondire
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename admin.jpg
	scale 30

\end_inset


\begin_inset Newline newline
\end_inset

Google is your friend
\end_layout

\begin_layout BeginFrame
Last call
\end_layout

\begin_layout Standard
\align center

\size largest
Domande?
\end_layout

\begin_layout Subsection*
Licenza
\end_layout

\begin_layout BeginFrame
Goodbye and thanks for all the fish
\end_layout

\begin_layout Standard
\align center

\size largest
Grazie per l'attenzione!
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename cc-by-sa.png
	height 0.9cm

\end_inset


\begin_inset Newline newline
\end_inset


\size footnotesize
Queste slides sono licenziate Creative Commons Attribution-ShareAlike 3.0
 Unported
\end_layout

\begin_layout Standard
\align center

\family typewriter
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.poul.org
\end_layout

\end_inset


\end_layout

\begin_layout EndFrame

\end_layout

\end_body
\end_document
